name: "update"

on:
  release:
    types: [published]

jobs:
  generate-update:
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.content }}
      update-json: ${{ steps.generate-update.outputs.update-json }}
      version: ${{ steps.version.outputs.current-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get version
        id: version
        uses: martinbeentjes/npm-get-version-action@main
      
      - name: Read changelog
        id: changelog
        uses: juliangruber/read-file-action@v1
        with:
          path: ./changelog.md
      
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Generate update file
        id: generate-update
        uses: actions/github-script@v6
        env:
          version: ${{ steps.version.outputs.current-version }}
          changelog: ${{ steps.changelog.outputs.content }}
          releaseId: ${{ steps.get_release.outputs.id }}
        with:
          script: |
            const { TextDecoder } = require('node:util');
            const { version, changelog, releaseId } = process.env;

            let response = await github.rest.repos.listReleaseAssets({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: releaseId,
            });

            let assets = response.data;

            if (!assets || assets.length === 0)
            {
              core.setFailed("No assets available in response");
              return;
            }

            let update = {
              "name": version,
              "notes": changelog,
              "pub_date": assets[0].updated_at,
              "platforms": {}
            };

            const decoder = new TextDecoder();
            for (const asset of assets)
            {
              const name = asset.name;
              core.info(`Checking asset ${name}`)
              if ((typeof name !== "string" && !(name instanceof String)))
              {
                core.info(`Name not a string`)
                continue;
              }

              if (name.endsWith(".sig"))
              {
                core.info("Sig file");
                continue;
              }

              const sigName = asset.name + ".sig";
              const sigAsset = assets.find(elem => elem.name === sigName);
              if (!sigAsset)
              {
                core.info(`No sig file with name ${sigName}`)
                continue;
              }
              const sigResponse = await github.request("GET /repos/{owner}/{repo}/releases/assets/{asset_id}", {
                headers: {
                  Accept: "application/octet-stream",
                },
                owner: context.repo.owner,
                repo: context.repo.repo,
                asset_id: sigAsset.id,
              });

              const sig = decoder.decode(sigResponse.data);
              core.info(`Sig: ${sig}`);

              let platform = {
                signature: sig,
                url: asset.browser_download_url
              };

              // TODO: Support more platforms
              const targz = ".tar.gz";
              if (name.endsWith(targz))
              {
                if (name.endsWith(".AppImage", name.length - targz.length))
                {
                  update.platforms["linux-x86_64"] = platform;
                }
                else
                {
                  update.platforms["darwin-intel"] = platform;
                }
              }
              else if (name.endsWith(".msi.zip"))
              {
                update.platforms["windows-x86_64"] = platform;
              }
            }

            core.setOutput("update-json", JSON.stringify(update));

  update-changes:
    runs-on: ubuntu-latest
    needs: generate-update
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: changes
      
      - name: Archive old update
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');

            const update_file = "update.json";
            if (!fs.existsSync(update_file))
            {
              core.log("No old updates to archive");
              return;
            }

            const updater_contents = JSON.parse(fs.readFileSync(update_file));
            const old_versions_file = "old_versions.json";
            let old_versions_contents;
            try
            {
              old_versions_contents = JSON.parse(fs.readFileSync(old_versions_file));
            }
            catch (err)
            {
              old_versions_contents = {
                versions: []
              }
            }

            let versions = old_versions_contents.versions;
            if (versions.length > 10)
            {
              const folder = "archive";
              if (!fs.existsSync(folder)) {
                fs.mkdirSync(folder);
              }

              const file = `${folder}/${versions[versions.length - 1].name}-{versions[0].name}.json`
              fs.writeFileSync(file, JSON.stringify(old_versions_contents))

              versions = old_versions_contents.versions = [];
              old_versions_contents.prev_page = file;
            }

            versions.unshift(updater_contents);
            fs.writeFileSync(update_file, JSON.stringify(old_versions_contents));

      - name: Modify updater file
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: update.json
          contents: ${{ needs.generate-update.outputs.update-json }}
          write-mode: overwrite
      
      - name: Commit changes
        env:
          VERSION: ${{ needs.generate-update.outputs.version }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "New version: $VERSION"
          git push
